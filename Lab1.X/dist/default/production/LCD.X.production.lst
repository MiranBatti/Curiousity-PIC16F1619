

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri May 06 20:02:59 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  0010                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0013                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001A                     	;# 
    45  001B                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001D                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  008C                     	;# 
    52  008D                     	;# 
    53  008E                     	;# 
    54  0090                     	;# 
    55  0091                     	;# 
    56  0092                     	;# 
    57  0093                     	;# 
    58  0094                     	;# 
    59  0095                     	;# 
    60  0096                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009A                     	;# 
    64  009B                     	;# 
    65  009B                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  009F                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  010E                     	;# 
    73  0111                     	;# 
    74  0112                     	;# 
    75  0113                     	;# 
    76  0114                     	;# 
    77  0115                     	;# 
    78  0116                     	;# 
    79  0117                     	;# 
    80  0118                     	;# 
    81  0119                     	;# 
    82  011C                     	;# 
    83  018C                     	;# 
    84  018D                     	;# 
    85  018E                     	;# 
    86  0191                     	;# 
    87  0191                     	;# 
    88  0192                     	;# 
    89  0193                     	;# 
    90  0193                     	;# 
    91  0194                     	;# 
    92  0195                     	;# 
    93  0196                     	;# 
    94  0197                     	;# 
    95  0199                     	;# 
    96  0199                     	;# 
    97  0199                     	;# 
    98  019A                     	;# 
    99  019A                     	;# 
   100  019A                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019C                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019D                     	;# 
   110  019D                     	;# 
   111  019D                     	;# 
   112  019E                     	;# 
   113  019E                     	;# 
   114  019E                     	;# 
   115  019F                     	;# 
   116  019F                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  020C                     	;# 
   121  020D                     	;# 
   122  020E                     	;# 
   123  0211                     	;# 
   124  0211                     	;# 
   125  0212                     	;# 
   126  0212                     	;# 
   127  0213                     	;# 
   128  0213                     	;# 
   129  0214                     	;# 
   130  0214                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0216                     	;# 
   136  0216                     	;# 
   137  0217                     	;# 
   138  0217                     	;# 
   139  028C                     	;# 
   140  028D                     	;# 
   141  028E                     	;# 
   142  0291                     	;# 
   143  0291                     	;# 
   144  0292                     	;# 
   145  0293                     	;# 
   146  0294                     	;# 
   147  0298                     	;# 
   148  0298                     	;# 
   149  0299                     	;# 
   150  029A                     	;# 
   151  029B                     	;# 
   152  029E                     	;# 
   153  030C                     	;# 
   154  030D                     	;# 
   155  030E                     	;# 
   156  038C                     	;# 
   157  038D                     	;# 
   158  038E                     	;# 
   159  0391                     	;# 
   160  0392                     	;# 
   161  0393                     	;# 
   162  0394                     	;# 
   163  0395                     	;# 
   164  0396                     	;# 
   165  0397                     	;# 
   166  0398                     	;# 
   167  0399                     	;# 
   168  040E                     	;# 
   169  0413                     	;# 
   170  0413                     	;# 
   171  0414                     	;# 
   172  0414                     	;# 
   173  0415                     	;# 
   174  0416                     	;# 
   175  0417                     	;# 
   176  0418                     	;# 
   177  041A                     	;# 
   178  041A                     	;# 
   179  041B                     	;# 
   180  041B                     	;# 
   181  041C                     	;# 
   182  041D                     	;# 
   183  041E                     	;# 
   184  041F                     	;# 
   185  0493                     	;# 
   186  0494                     	;# 
   187  0495                     	;# 
   188  0496                     	;# 
   189  049A                     	;# 
   190  049B                     	;# 
   191  049C                     	;# 
   192  049D                     	;# 
   193  058C                     	;# 
   194  058C                     	;# 
   195  058D                     	;# 
   196  058E                     	;# 
   197  058E                     	;# 
   198  058F                     	;# 
   199  0590                     	;# 
   200  0590                     	;# 
   201  0591                     	;# 
   202  0592                     	;# 
   203  0592                     	;# 
   204  0593                     	;# 
   205  0594                     	;# 
   206  0594                     	;# 
   207  0595                     	;# 
   208  0596                     	;# 
   209  0596                     	;# 
   210  0597                     	;# 
   211  0598                     	;# 
   212  0599                     	;# 
   213  059A                     	;# 
   214  059B                     	;# 
   215  059B                     	;# 
   216  059C                     	;# 
   217  059D                     	;# 
   218  060C                     	;# 
   219  060C                     	;# 
   220  060D                     	;# 
   221  060E                     	;# 
   222  060F                     	;# 
   223  060F                     	;# 
   224  0610                     	;# 
   225  0611                     	;# 
   226  0612                     	;# 
   227  0613                     	;# 
   228  0614                     	;# 
   229  0617                     	;# 
   230  0618                     	;# 
   231  0619                     	;# 
   232  061A                     	;# 
   233  061B                     	;# 
   234  061C                     	;# 
   235  0691                     	;# 
   236  0692                     	;# 
   237  0693                     	;# 
   238  0694                     	;# 
   239  0695                     	;# 
   240  0696                     	;# 
   241  0697                     	;# 
   242  0699                     	;# 
   243  069A                     	;# 
   244  0711                     	;# 
   245  0712                     	;# 
   246  0713                     	;# 
   247  0714                     	;# 
   248  0715                     	;# 
   249  0718                     	;# 
   250  0718                     	;# 
   251  0719                     	;# 
   252  071A                     	;# 
   253  071A                     	;# 
   254  071B                     	;# 
   255  071C                     	;# 
   256  071D                     	;# 
   257  0791                     	;# 
   258  0791                     	;# 
   259  0792                     	;# 
   260  0793                     	;# 
   261  0793                     	;# 
   262  0794                     	;# 
   263  0795                     	;# 
   264  0795                     	;# 
   265  0796                     	;# 
   266  0797                     	;# 
   267  0797                     	;# 
   268  0798                     	;# 
   269  0799                     	;# 
   270  079A                     	;# 
   271  080C                     	;# 
   272  080C                     	;# 
   273  080D                     	;# 
   274  080E                     	;# 
   275  080E                     	;# 
   276  080F                     	;# 
   277  0810                     	;# 
   278  0810                     	;# 
   279  0811                     	;# 
   280  0812                     	;# 
   281  0812                     	;# 
   282  0813                     	;# 
   283  0814                     	;# 
   284  0815                     	;# 
   285  0816                     	;# 
   286  0817                     	;# 
   287  0818                     	;# 
   288  0819                     	;# 
   289  081A                     	;# 
   290  081A                     	;# 
   291  081B                     	;# 
   292  081C                     	;# 
   293  081C                     	;# 
   294  081D                     	;# 
   295  088C                     	;# 
   296  088D                     	;# 
   297  088E                     	;# 
   298  088F                     	;# 
   299  088F                     	;# 
   300  0890                     	;# 
   301  0891                     	;# 
   302  0892                     	;# 
   303  0893                     	;# 
   304  0893                     	;# 
   305  0894                     	;# 
   306  0895                     	;# 
   307  0896                     	;# 
   308  0897                     	;# 
   309  0897                     	;# 
   310  0898                     	;# 
   311  0899                     	;# 
   312  0D8C                     	;# 
   313  0D8C                     	;# 
   314  0D8D                     	;# 
   315  0D8E                     	;# 
   316  0D8F                     	;# 
   317  0D8F                     	;# 
   318  0D90                     	;# 
   319  0D91                     	;# 
   320  0D92                     	;# 
   321  0D92                     	;# 
   322  0D93                     	;# 
   323  0D94                     	;# 
   324  0D95                     	;# 
   325  0D95                     	;# 
   326  0D96                     	;# 
   327  0D97                     	;# 
   328  0D98                     	;# 
   329  0D99                     	;# 
   330  0D9A                     	;# 
   331  0D9B                     	;# 
   332  0D9C                     	;# 
   333  0D9D                     	;# 
   334  0D9E                     	;# 
   335  0D9E                     	;# 
   336  0D9F                     	;# 
   337  0DA0                     	;# 
   338  0DA1                     	;# 
   339  0DA1                     	;# 
   340  0DA2                     	;# 
   341  0DA3                     	;# 
   342  0DA4                     	;# 
   343  0DA4                     	;# 
   344  0DA5                     	;# 
   345  0DA6                     	;# 
   346  0DA7                     	;# 
   347  0DA7                     	;# 
   348  0DA8                     	;# 
   349  0DA9                     	;# 
   350  0DAA                     	;# 
   351  0DAB                     	;# 
   352  0DAC                     	;# 
   353  0DAD                     	;# 
   354  0DAE                     	;# 
   355  0DAF                     	;# 
   356  0E0F                     	;# 
   357  0E10                     	;# 
   358  0E11                     	;# 
   359  0E12                     	;# 
   360  0E13                     	;# 
   361  0E14                     	;# 
   362  0E15                     	;# 
   363  0E16                     	;# 
   364  0E17                     	;# 
   365  0E18                     	;# 
   366  0E19                     	;# 
   367  0E1A                     	;# 
   368  0E1B                     	;# 
   369  0E1C                     	;# 
   370  0E1D                     	;# 
   371  0E1E                     	;# 
   372  0E1F                     	;# 
   373  0E20                     	;# 
   374  0E21                     	;# 
   375  0E22                     	;# 
   376  0E23                     	;# 
   377  0E24                     	;# 
   378  0E25                     	;# 
   379  0E26                     	;# 
   380  0E27                     	;# 
   381  0E28                     	;# 
   382  0E29                     	;# 
   383  0E2A                     	;# 
   384  0E2B                     	;# 
   385  0E2C                     	;# 
   386  0E2D                     	;# 
   387  0E2E                     	;# 
   388  0E90                     	;# 
   389  0E91                     	;# 
   390  0E92                     	;# 
   391  0E94                     	;# 
   392  0E95                     	;# 
   393  0E9C                     	;# 
   394  0E9D                     	;# 
   395  0E9E                     	;# 
   396  0E9F                     	;# 
   397  0EA0                     	;# 
   398  0EA1                     	;# 
   399  0EA2                     	;# 
   400  0EA3                     	;# 
   401  0EA4                     	;# 
   402  0EA5                     	;# 
   403  0EA6                     	;# 
   404  0EA7                     	;# 
   405  0F0F                     	;# 
   406  0F10                     	;# 
   407  0F11                     	;# 
   408  0F12                     	;# 
   409  0F13                     	;# 
   410  0F14                     	;# 
   411  0F15                     	;# 
   412  0F16                     	;# 
   413  0F17                     	;# 
   414  0F18                     	;# 
   415  0F19                     	;# 
   416  0F1A                     	;# 
   417  0F1B                     	;# 
   418  0F1C                     	;# 
   419  0F1D                     	;# 
   420  0F1E                     	;# 
   421  0F1F                     	;# 
   422  0F20                     	;# 
   423  0F21                     	;# 
   424  0F22                     	;# 
   425  0F23                     	;# 
   426  0F24                     	;# 
   427  0F25                     	;# 
   428  0F26                     	;# 
   429  0F27                     	;# 
   430  0F28                     	;# 
   431  0F29                     	;# 
   432  0F2A                     	;# 
   433  0F2B                     	;# 
   434  0F2C                     	;# 
   435  0F2D                     	;# 
   436  0F2E                     	;# 
   437  0F2F                     	;# 
   438  0F30                     	;# 
   439  0F31                     	;# 
   440  0F32                     	;# 
   441  0F33                     	;# 
   442  0F34                     	;# 
   443  0F35                     	;# 
   444  0F36                     	;# 
   445  0F37                     	;# 
   446  0FE4                     	;# 
   447  0FE5                     	;# 
   448  0FE6                     	;# 
   449  0FE7                     	;# 
   450  0FE8                     	;# 
   451  0FE9                     	;# 
   452  0FEA                     	;# 
   453  0FEB                     	;# 
   454  0FED                     	;# 
   455  0FEE                     	;# 
   456  0FEF                     	;# 
   457  000C                     _PORTA	set	12
   458  000C                     _PORTAbits	set	12
   459  000D                     _PORTB	set	13
   460  008C                     _TRISA	set	140
   461  008D                     _TRISB	set	141
   462  010C                     _LATA	set	268
   463  010D                     _LATB	set	269
   464  018C                     _ANSELA	set	396
   465  018D                     _ANSELB	set	397
   466                           
   467                           	psect	cinit
   468  07FD                     start_initialization:	
   469                           ; #config settings
   470                           
   471  07FD                     __initialization:	
   472  07FD                     end_of_initialization:	
   473                           ;End of C runtime variable initialization code
   474                           
   475  07FD                     __end_of__initialization:	
   476  07FD  0020               	movlb	0
   477  07FE  3187  2F86         	ljmp	_main	;jump to C main() function
   478                           
   479                           	psect	cstackCOMMON
   480  0070                     __pcstackCOMMON:	
   481  0070                     ?_init:	
   482  0070                     ?_print_instr:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ??_print_instr:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_print_char:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ??_print_char:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_init_display:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_EE:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ??_EE:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_E:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ??_E:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_main:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?___awmod:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ___awmod@divisor:	
   516                           ; 2 bytes @ 0x0
   517                           
   518                           
   519                           ; 2 bytes @ 0x0
   520  0070                     	ds	1
   521  0071                     print_char@data:	
   522  0071                     print_instr@instr:	
   523                           ; 1 bytes @ 0x1
   524                           
   525                           
   526                           ; 1 bytes @ 0x1
   527  0071                     	ds	1
   528  0072                     ??_init_display:	
   529  0072                     ___awmod@dividend:	
   530                           ; 1 bytes @ 0x2
   531                           
   532                           
   533                           ; 2 bytes @ 0x2
   534  0072                     	ds	2
   535  0074                     ??_init:	
   536  0074                     ??___awmod:	
   537                           ; 1 bytes @ 0x4
   538                           
   539                           
   540                           ; 1 bytes @ 0x4
   541  0074                     	ds	1
   542  0075                     ___awmod@counter:	
   543                           
   544                           ; 1 bytes @ 0x5
   545  0075                     	ds	1
   546  0076                     ___awmod@sign:	
   547                           
   548                           ; 1 bytes @ 0x6
   549  0076                     	ds	1
   550  0077                     ?___awdiv:	
   551  0077                     ___awdiv@divisor:	
   552                           ; 2 bytes @ 0x7
   553                           
   554                           
   555                           ; 2 bytes @ 0x7
   556  0077                     	ds	2
   557  0079                     ___awdiv@dividend:	
   558                           
   559                           ; 2 bytes @ 0x9
   560  0079                     	ds	2
   561  007B                     ??___awdiv:	
   562                           
   563                           ; 1 bytes @ 0xB
   564  007B                     	ds	1
   565  007C                     ??_main:	
   566                           
   567                           ; 1 bytes @ 0xC
   568  007C                     	ds	2
   569                           
   570                           	psect	cstackBANK0
   571  0020                     __pcstackBANK0:	
   572  0020                     ___awdiv@counter:	
   573                           
   574                           ; 1 bytes @ 0x0
   575  0020                     	ds	1
   576  0021                     ___awdiv@sign:	
   577                           
   578                           ; 1 bytes @ 0x1
   579  0021                     	ds	1
   580  0022                     ___awdiv@quotient:	
   581                           
   582                           ; 2 bytes @ 0x2
   583  0022                     	ds	2
   584  0024                     main@i:	
   585                           
   586                           ; 1 bytes @ 0x4
   587  0024                     	ds	1
   588                           
   589                           	psect	maintext
   590  0786                     __pmaintext:	
   591 ;;
   592 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   593 ;;
   594 ;; *************** function _main *****************
   595 ;; Defined at:
   596 ;;		line 27 in file "main.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;  i               1    4[BANK0 ] unsigned char 
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, status,2, status,0, pclath, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : B1F/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   613 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   614 ;;Total ram usage:        3 bytes
   615 ;; Hardware stack levels required when called:    4
   616 ;; This function calls:
   617 ;;		___awdiv
   618 ;;		___awmod
   619 ;;		_init
   620 ;;		_print_char
   621 ;;		_print_instr
   622 ;; This function is called by:
   623 ;;		Startup code after reset
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           
   628                           ;psect for function _main
   629  0786                     _main:	
   630                           
   631                           ;main.c: 29: char i;
   632                           ;main.c: 30: init();
   633                           
   634                           ;incstack = 0
   635                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   636  0786  3186  2664  3187   	fcall	_init
   637                           
   638                           ;main.c: 31: print_instr(0x01);
   639  0789  3001               	movlw	1
   640  078A  3186  268A  3187   	fcall	_print_instr
   641                           
   642                           ;main.c: 32: i=0;
   643  078D  0020               	movlb	0	; select bank0
   644  078E  01A4               	clrf	main@i
   645  078F                     l794:	
   646                           ;main.c: 33: for(;;)
   647                           
   648                           
   649                           ;main.c: 34: {
   650                           ;main.c: 35: print_instr(0x80 + 0);
   651  078F  3080               	movlw	128
   652  0790  3186  268A  3187   	fcall	_print_instr
   653                           
   654                           ;main.c: 36: print_char(i/100+'0');
   655  0793  3064               	movlw	100
   656  0794  00F7               	movwf	___awdiv@divisor
   657  0795  3000               	movlw	0
   658  0796  00F8               	movwf	___awdiv@divisor+1
   659  0797  0020               	movlb	0	; select bank0
   660  0798  0824               	movf	main@i,w
   661  0799  00FC               	movwf	??_main
   662  079A  01FD               	clrf	??_main+1
   663  079B  087C               	movf	??_main,w
   664  079C  00F9               	movwf	___awdiv@dividend
   665  079D  087D               	movf	??_main+1,w
   666  079E  00FA               	movwf	___awdiv@dividend+1
   667  079F  3187  2734  3187   	fcall	___awdiv
   668  07A2  0877               	movf	?___awdiv,w
   669  07A3  3E30               	addlw	48
   670  07A4  3186  26A3  3187   	fcall	_print_char
   671                           
   672                           ;main.c: 37: print_char((i%100)/10+'0');
   673  07A7  300A               	movlw	10
   674  07A8  00F7               	movwf	___awdiv@divisor
   675  07A9  3000               	movlw	0
   676  07AA  00F8               	movwf	___awdiv@divisor+1
   677  07AB  0020               	movlb	0	; select bank0
   678  07AC  0824               	movf	main@i,w
   679  07AD  00FC               	movwf	??_main
   680  07AE  01FD               	clrf	??_main+1
   681  07AF  087C               	movf	??_main,w
   682  07B0  00F2               	movwf	___awmod@dividend
   683  07B1  087D               	movf	??_main+1,w
   684  07B2  00F3               	movwf	___awmod@dividend+1
   685  07B3  3064               	movlw	100
   686  07B4  00F0               	movwf	___awmod@divisor
   687  07B5  3000               	movlw	0
   688  07B6  00F1               	movwf	___awmod@divisor+1
   689  07B7  3186  26EF  3187   	fcall	___awmod
   690  07BA  0871               	movf	?___awmod+1,w
   691  07BB  00FA               	movwf	___awdiv@dividend+1
   692  07BC  0870               	movf	?___awmod,w
   693  07BD  00F9               	movwf	___awdiv@dividend
   694  07BE  3187  2734  3187   	fcall	___awdiv
   695  07C1  0877               	movf	?___awdiv,w
   696  07C2  3E30               	addlw	48
   697  07C3  3186  26A3  3187   	fcall	_print_char
   698                           
   699                           ;main.c: 38: print_char(i%10+'0');
   700  07C6  300A               	movlw	10
   701  07C7  00F0               	movwf	___awmod@divisor
   702  07C8  3000               	movlw	0
   703  07C9  00F1               	movwf	___awmod@divisor+1
   704  07CA  0020               	movlb	0	; select bank0
   705  07CB  0824               	movf	main@i,w
   706  07CC  00FC               	movwf	??_main
   707  07CD  01FD               	clrf	??_main+1
   708  07CE  087C               	movf	??_main,w
   709  07CF  00F2               	movwf	___awmod@dividend
   710  07D0  087D               	movf	??_main+1,w
   711  07D1  00F3               	movwf	___awmod@dividend+1
   712  07D2  3186  26EF  3187   	fcall	___awmod
   713  07D5  0870               	movf	?___awmod,w
   714  07D6  3E30               	addlw	48
   715  07D7  3186  26A3  3187   	fcall	_print_char
   716                           
   717                           ;main.c: 39: i++;
   718  07DA  3001               	movlw	1
   719  07DB  00FC               	movwf	??_main
   720  07DC  087C               	movf	??_main,w
   721  07DD  0020               	movlb	0	; select bank0
   722  07DE  07A4               	addwf	main@i,f
   723                           
   724                           ;main.c: 40: _delay((unsigned long)((250)*(500000/4000.0)));
   725  07DF  3029               	movlw	41
   726  07E0  00FD               	movwf	??_main+1
   727  07E1  3094               	movlw	148
   728  07E2  00FC               	movwf	??_main
   729  07E3                     u537:	
   730  07E3  0BFC               	decfsz	??_main,f
   731  07E4  2FE3               	goto	u537
   732  07E5  0BFD               	decfsz	??_main+1,f
   733  07E6  2FE3               	goto	u537
   734  07E7  0000               	nop
   735                           
   736                           ;main.c: 42: print_instr(0x80 + 0x40);
   737  07E8  30C0               	movlw	192
   738  07E9  3186  268A  3187   	fcall	_print_instr
   739                           
   740                           ;main.c: 43: print_char(' ');
   741  07EC  3020               	movlw	32
   742  07ED  3186  26A3  3187   	fcall	_print_char
   743                           
   744                           ;main.c: 44: print_char('H');
   745  07F0  3048               	movlw	72
   746  07F1  3186  26A3  3187   	fcall	_print_char
   747                           
   748                           ;main.c: 45: print_char('e');
   749  07F4  3065               	movlw	101
   750  07F5  3186  26A3  3187   	fcall	_print_char
   751                           
   752                           ;main.c: 46: print_char('j');
   753  07F8  306A               	movlw	106
   754  07F9  3186  26A3  3187   	fcall	_print_char
   755                           
   756                           ;main.c: 47: }
   757  07FC  2F8F               	goto	l794
   758  07FD                     __end_of_main:	
   759                           
   760                           	psect	text1
   761  06A3                     __ptext1:	
   762 ;; *************** function _print_char *****************
   763 ;; Defined at:
   764 ;;		line 92 in file "main.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  data            1    wreg     unsigned char 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  data            1    1[COMMON] unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0, pclath, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   781 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   782 ;;Total ram usage:        2 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; Hardware stack levels required when called:    1
   785 ;; This function calls:
   786 ;;		_E
   787 ;; This function is called by:
   788 ;;		_main
   789 ;;		_print_text
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function _print_char
   795  06A3                     _print_char:	
   796                           
   797                           ;incstack = 0
   798                           ; Regs used in _print_char: [wreg+status,2+status,0+pclath+cstack]
   799                           ;print_char@data stored from wreg
   800  06A3  00F1               	movwf	print_char@data
   801                           
   802                           ;main.c: 95: PORTB = data & 0xF0;
   803  06A4  0871               	movf	print_char@data,w
   804  06A5  39F0               	andlw	240
   805  06A6  0020               	movlb	0	; select bank0
   806  06A7  008D               	movwf	13	;volatile
   807                           
   808                           ;main.c: 96: PORTAbits.RA2=1;
   809  06A8  150C               	bsf	12,2	;volatile
   810                           
   811                           ;main.c: 97: E();
   812  06A9  3186  2655  3186   	fcall	_E
   813                           
   814                           ;main.c: 100: PORTB = (data << 4) & 0xF0;
   815  06AC  0871               	movf	print_char@data,w
   816  06AD  00F0               	movwf	??_print_char
   817  06AE  3003               	movlw	3
   818  06AF                     u285:	
   819  06AF  35F0               	lslf	??_print_char,f
   820  06B0  3EFF               	addlw	-1
   821  06B1  1D03               	skipz
   822  06B2  2EAF               	goto	u285
   823  06B3  3570               	lslf	??_print_char,w
   824  06B4  39F0               	andlw	240
   825  06B5  0020               	movlb	0	; select bank0
   826  06B6  008D               	movwf	13	;volatile
   827                           
   828                           ;main.c: 101: PORTAbits.RA2=1;
   829  06B7  150C               	bsf	12,2	;volatile
   830                           
   831                           ;main.c: 102: E();
   832  06B8  3186  2655         	fcall	_E
   833                           
   834                           ;main.c: 103: PORTB=0;
   835  06BA  0020               	movlb	0	; select bank0
   836  06BB  018D               	clrf	13	;volatile
   837                           
   838                           ;main.c: 104: PORTA=0;
   839  06BC  018C               	clrf	12	;volatile
   840  06BD  0008               	return
   841  06BE                     __end_of_print_char:	
   842                           
   843                           	psect	text2
   844  0664                     __ptext2:	
   845 ;; *************** function _init *****************
   846 ;; Defined at:
   847 ;;		line 51 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, pclath, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    3
   868 ;; This function calls:
   869 ;;		_init_display
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _init
   877  0664                     _init:	
   878                           
   879                           ;main.c: 53: LATA=0;
   880                           
   881                           ;incstack = 0
   882                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
   883  0664  0022               	movlb	2	; select bank2
   884  0665  018C               	clrf	12	;volatile
   885                           
   886                           ;main.c: 54: LATB=0;
   887  0666  018D               	clrf	13	;volatile
   888                           
   889                           ;main.c: 55: PORTA=0;
   890  0667  0020               	movlb	0	; select bank0
   891  0668  018C               	clrf	12	;volatile
   892                           
   893                           ;main.c: 56: PORTB=0;
   894  0669  018D               	clrf	13	;volatile
   895                           
   896                           ;main.c: 57: ANSELA=0;
   897  066A  0023               	movlb	3	; select bank3
   898  066B  018C               	clrf	12	;volatile
   899                           
   900                           ;main.c: 58: ANSELB=0;
   901  066C  018D               	clrf	13	;volatile
   902                           
   903                           ;main.c: 59: TRISA=0;
   904  066D  0021               	movlb	1	; select bank1
   905  066E  018C               	clrf	12	;volatile
   906                           
   907                           ;main.c: 60: TRISB=0;
   908  066F  018D               	clrf	13	;volatile
   909                           
   910                           ;main.c: 61: init_display();
   911  0670  3186  26BE         	fcall	_init_display
   912  0672  0008               	return
   913  0673                     __end_of_init:	
   914                           
   915                           	psect	text3
   916  06BE                     __ptext3:	
   917 ;; *************** function _init_display *****************
   918 ;; Defined at:
   919 ;;		line 66 in file "main.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;		None
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   937 ;;Total ram usage:        2 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    2
   940 ;; This function calls:
   941 ;;		_EE
   942 ;;		_print_instr
   943 ;; This function is called by:
   944 ;;		_init
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           
   949                           ;psect for function _init_display
   950  06BE                     _init_display:	
   951                           
   952                           ;main.c: 70: _delay((unsigned long)((25)*(500000/4000.0)));
   953                           
   954                           ;incstack = 0
   955                           ; Regs used in _init_display: [wreg+status,2+status,0+pclath+cstack]
   956  06BE  3005               	movlw	5
   957  06BF  00F3               	movwf	??_init_display+1
   958  06C0  300D               	movlw	13
   959  06C1  00F2               	movwf	??_init_display
   960  06C2                     u547:	
   961  06C2  0BF2               	decfsz	??_init_display,f
   962  06C3  2EC2               	goto	u547
   963  06C4  0BF3               	decfsz	??_init_display+1,f
   964  06C5  2EC2               	goto	u547
   965  06C6  0000               	nop
   966                           
   967                           ;main.c: 71: PORTB=0x30;
   968  06C7  3030               	movlw	48
   969  06C8  0020               	movlb	0	; select bank0
   970  06C9  008D               	movwf	13	;volatile
   971                           
   972                           ;main.c: 72: EE();
   973  06CA  3186  2673  3186   	fcall	_EE
   974                           
   975                           ;main.c: 73: PORTB=0x30;
   976  06CD  3030               	movlw	48
   977  06CE  0020               	movlb	0	; select bank0
   978  06CF  008D               	movwf	13	;volatile
   979                           
   980                           ;main.c: 74: EE();
   981  06D0  3186  2673  3186   	fcall	_EE
   982                           
   983                           ;main.c: 75: PORTB=0x30;
   984  06D3  3030               	movlw	48
   985  06D4  0020               	movlb	0	; select bank0
   986  06D5  008D               	movwf	13	;volatile
   987                           
   988                           ;main.c: 76: EE();
   989  06D6  3186  2673  3186   	fcall	_EE
   990                           
   991                           ;main.c: 77: PORTB=0x20;
   992  06D9  3020               	movlw	32
   993  06DA  0020               	movlb	0	; select bank0
   994  06DB  008D               	movwf	13	;volatile
   995                           
   996                           ;main.c: 78: EE();
   997  06DC  3186  2673  3186   	fcall	_EE
   998                           
   999                           ;main.c: 81: print_instr(0x28);
  1000  06DF  3028               	movlw	40
  1001  06E0  3186  268A  3186   	fcall	_print_instr
  1002                           
  1003                           ;main.c: 82: print_instr(0x0C);
  1004  06E3  300C               	movlw	12
  1005  06E4  3186  268A  3186   	fcall	_print_instr
  1006                           
  1007                           ;main.c: 83: print_instr(0x01);
  1008  06E7  3001               	movlw	1
  1009  06E8  3186  268A  3186   	fcall	_print_instr
  1010                           
  1011                           ;main.c: 84: print_instr(0x06);
  1012  06EB  3006               	movlw	6
  1013  06EC  3186  268A         	fcall	_print_instr
  1014  06EE  0008               	return
  1015  06EF                     __end_of_init_display:	
  1016                           
  1017                           	psect	text4
  1018  068A                     __ptext4:	
  1019 ;; *************** function _print_instr *****************
  1020 ;; Defined at:
  1021 ;;		line 110 in file "main.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  instr           1    wreg     unsigned char 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  instr           1    1[COMMON] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, pclath, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1038 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1039 ;;Total ram usage:        2 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    1
  1042 ;; This function calls:
  1043 ;;		_E
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;;		_init_display
  1047 ;;		_print_text
  1048 ;; This function uses a non-reentrant model
  1049 ;;
  1050                           
  1051                           
  1052                           ;psect for function _print_instr
  1053  068A                     _print_instr:	
  1054                           
  1055                           ;incstack = 0
  1056                           ; Regs used in _print_instr: [wreg+status,2+status,0+pclath+cstack]
  1057                           ;print_instr@instr stored from wreg
  1058  068A  00F1               	movwf	print_instr@instr
  1059                           
  1060                           ;main.c: 113: PORTB = instr & 0xF0;
  1061  068B  0871               	movf	print_instr@instr,w
  1062  068C  39F0               	andlw	240
  1063  068D  0020               	movlb	0	; select bank0
  1064  068E  008D               	movwf	13	;volatile
  1065                           
  1066                           ;main.c: 114: E();
  1067  068F  3186  2655  3186   	fcall	_E
  1068                           
  1069                           ;main.c: 117: PORTB = (instr << 4) & 0xF0;
  1070  0692  0871               	movf	print_instr@instr,w
  1071  0693  00F0               	movwf	??_print_instr
  1072  0694  3003               	movlw	3
  1073  0695                     u275:	
  1074  0695  35F0               	lslf	??_print_instr,f
  1075  0696  3EFF               	addlw	-1
  1076  0697  1D03               	skipz
  1077  0698  2E95               	goto	u275
  1078  0699  3570               	lslf	??_print_instr,w
  1079  069A  39F0               	andlw	240
  1080  069B  0020               	movlb	0	; select bank0
  1081  069C  008D               	movwf	13	;volatile
  1082                           
  1083                           ;main.c: 118: E();
  1084  069D  3186  2655         	fcall	_E
  1085                           
  1086                           ;main.c: 119: PORTB=0;
  1087  069F  0020               	movlb	0	; select bank0
  1088  06A0  018D               	clrf	13	;volatile
  1089                           
  1090                           ;main.c: 120: PORTA=0;
  1091  06A1  018C               	clrf	12	;volatile
  1092  06A2  0008               	return
  1093  06A3                     __end_of_print_instr:	
  1094                           
  1095                           	psect	text5
  1096  0655                     __ptext5:	
  1097 ;; *************** function _E *****************
  1098 ;; Defined at:
  1099 ;;		line 141 in file "main.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		None
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1117 ;;Total ram usage:        0 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_print_char
  1123 ;;		_print_instr
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           
  1128                           ;psect for function _E
  1129  0655                     _E:	
  1130                           
  1131                           ;main.c: 143: _delay((unsigned long)((25)*(500000/4000000.0)));
  1132                           
  1133                           ;incstack = 0
  1134                           ; Regs used in _E: []
  1135  0655  3200               	nop2	;2 cycle nop
  1136  0656  0000               	nop
  1137                           
  1138                           ;main.c: 144: PORTAbits.RA0=0;
  1139  0657  0020               	movlb	0	; select bank0
  1140  0658  100C               	bcf	12,0	;volatile
  1141                           
  1142                           ;main.c: 145: _delay((unsigned long)((25)*(500000/4000000.0)));
  1143  0659  3200               	nop2	;2 cycle nop
  1144  065A  0000               	nop
  1145                           
  1146                           ;main.c: 146: PORTAbits.RA0=1;
  1147  065B  0020               	movlb	0	; select bank0
  1148  065C  140C               	bsf	12,0	;volatile
  1149                           
  1150                           ;main.c: 147: _delay((unsigned long)((25)*(500000/4000000.0)));
  1151  065D  3200               	nop2	;2 cycle nop
  1152  065E  0000               	nop
  1153                           
  1154                           ;main.c: 148: PORTAbits.RA0=0;
  1155  065F  0020               	movlb	0	; select bank0
  1156  0660  100C               	bcf	12,0	;volatile
  1157                           
  1158                           ;main.c: 149: _delay((unsigned long)((25)*(500000/4000000.0)));
  1159  0661  3200               	nop2	;2 cycle nop
  1160  0662  0000               	nop
  1161  0663  0008               	return
  1162  0664                     __end_of_E:	
  1163                           
  1164                           	psect	text6
  1165  0673                     __ptext6:	
  1166 ;; *************** function _EE *****************
  1167 ;; Defined at:
  1168 ;;		line 127 in file "main.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1185 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1186 ;;Total ram usage:        1 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_init_display
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function _EE
  1197  0673                     _EE:	
  1198                           
  1199                           ;main.c: 129: _delay((unsigned long)((5)*(500000/4000.0)));
  1200                           
  1201                           ;incstack = 0
  1202                           ; Regs used in _EE: [wreg]
  1203  0673  30D0               	movlw	208
  1204  0674  00F0               	movwf	??_EE
  1205  0675                     u557:	
  1206  0675  0BF0               	decfsz	??_EE,f
  1207  0676  2E75               	goto	u557
  1208                           
  1209                           ;main.c: 130: PORTAbits.RA0=0;
  1210  0677  0020               	movlb	0	; select bank0
  1211  0678  100C               	bcf	12,0	;volatile
  1212                           
  1213                           ;main.c: 131: _delay((unsigned long)((5)*(500000/4000.0)));
  1214  0679  30D0               	movlw	208
  1215  067A  00F0               	movwf	??_EE
  1216  067B                     u567:	
  1217  067B  0BF0               	decfsz	??_EE,f
  1218  067C  2E7B               	goto	u567
  1219                           
  1220                           ;main.c: 132: PORTAbits.RA0=1;
  1221  067D  0020               	movlb	0	; select bank0
  1222  067E  140C               	bsf	12,0	;volatile
  1223                           
  1224                           ;main.c: 133: _delay((unsigned long)((5)*(500000/4000.0)));
  1225  067F  30D0               	movlw	208
  1226  0680  00F0               	movwf	??_EE
  1227  0681                     u577:	
  1228  0681  0BF0               	decfsz	??_EE,f
  1229  0682  2E81               	goto	u577
  1230                           
  1231                           ;main.c: 134: PORTAbits.RA0=0;
  1232  0683  0020               	movlb	0	; select bank0
  1233  0684  100C               	bcf	12,0	;volatile
  1234                           
  1235                           ;main.c: 135: _delay((unsigned long)((5)*(500000/4000.0)));
  1236  0685  30D0               	movlw	208
  1237  0686  00F0               	movwf	??_EE
  1238  0687                     u587:	
  1239  0687  0BF0               	decfsz	??_EE,f
  1240  0688  2E87               	goto	u587
  1241  0689  0008               	return
  1242  068A                     __end_of_EE:	
  1243                           
  1244                           	psect	text7
  1245  06EF                     __ptext7:	
  1246 ;; *************** function ___awmod *****************
  1247 ;; Defined at:
  1248 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  divisor         2    0[COMMON] int 
  1251 ;;  dividend        2    2[COMMON] int 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  sign            1    6[COMMON] unsigned char 
  1254 ;;  counter         1    5[COMMON] unsigned char 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  2    0[COMMON] int 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1264 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1265 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1266 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1267 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1268 ;;Total ram usage:        7 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function ___awmod
  1279  06EF                     ___awmod:	
  1280                           
  1281                           ;incstack = 0
  1282                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1283  06EF  01F6               	clrf	___awmod@sign
  1284  06F0  1FF3               	btfss	___awmod@dividend+1,7
  1285  06F1  2EF9               	goto	l760
  1286  06F2  09F2               	comf	___awmod@dividend,f
  1287  06F3  09F3               	comf	___awmod@dividend+1,f
  1288  06F4  0AF2               	incf	___awmod@dividend,f
  1289  06F5  1903               	skipnz
  1290  06F6  0AF3               	incf	___awmod@dividend+1,f
  1291  06F7  01F6               	clrf	___awmod@sign
  1292  06F8  0AF6               	incf	___awmod@sign,f
  1293  06F9                     l760:	
  1294  06F9  1FF1               	btfss	___awmod@divisor+1,7
  1295  06FA  2F00               	goto	l764
  1296  06FB  09F0               	comf	___awmod@divisor,f
  1297  06FC  09F1               	comf	___awmod@divisor+1,f
  1298  06FD  0AF0               	incf	___awmod@divisor,f
  1299  06FE  1903               	skipnz
  1300  06FF  0AF1               	incf	___awmod@divisor+1,f
  1301  0700                     l764:	
  1302  0700  0870               	movf	___awmod@divisor,w
  1303  0701  0471               	iorwf	___awmod@divisor+1,w
  1304  0702  1903               	btfsc	3,2
  1305  0703  2F27               	goto	l782
  1306  0704  01F5               	clrf	___awmod@counter
  1307  0705  0AF5               	incf	___awmod@counter,f
  1308  0706                     l772:	
  1309  0706  1BF1               	btfsc	___awmod@divisor+1,7
  1310  0707  2F12               	goto	l774
  1311  0708  3001               	movlw	1
  1312  0709                     u425:	
  1313  0709  35F0               	lslf	___awmod@divisor,f
  1314  070A  0DF1               	rlf	___awmod@divisor+1,f
  1315  070B  0B89               	decfsz	9,f
  1316  070C  2F09               	goto	u425
  1317  070D  3001               	movlw	1
  1318  070E  00F4               	movwf	??___awmod
  1319  070F  0874               	movf	??___awmod,w
  1320  0710  07F5               	addwf	___awmod@counter,f
  1321  0711  2F06               	goto	l772
  1322  0712                     l774:	
  1323  0712  0871               	movf	___awmod@divisor+1,w
  1324  0713  0273               	subwf	___awmod@dividend+1,w
  1325  0714  1D03               	skipz
  1326  0715  2F18               	goto	u445
  1327  0716  0870               	movf	___awmod@divisor,w
  1328  0717  0272               	subwf	___awmod@dividend,w
  1329  0718                     u445:	
  1330  0718  1C03               	skipc
  1331  0719  2F1E               	goto	l778
  1332  071A  0870               	movf	___awmod@divisor,w
  1333  071B  02F2               	subwf	___awmod@dividend,f
  1334  071C  0871               	movf	___awmod@divisor+1,w
  1335  071D  3BF3               	subwfb	___awmod@dividend+1,f
  1336  071E                     l778:	
  1337  071E  3001               	movlw	1
  1338  071F                     u455:	
  1339  071F  36F1               	lsrf	___awmod@divisor+1,f
  1340  0720  0CF0               	rrf	___awmod@divisor,f
  1341  0721  0B89               	decfsz	9,f
  1342  0722  2F1F               	goto	u455
  1343  0723  3001               	movlw	1
  1344  0724  02F5               	subwf	___awmod@counter,f
  1345  0725  1D03               	btfss	3,2
  1346  0726  2F12               	goto	l774
  1347  0727                     l782:	
  1348  0727  0876               	movf	___awmod@sign,w
  1349  0728  1903               	btfsc	3,2
  1350  0729  2F2F               	goto	l786
  1351  072A  09F2               	comf	___awmod@dividend,f
  1352  072B  09F3               	comf	___awmod@dividend+1,f
  1353  072C  0AF2               	incf	___awmod@dividend,f
  1354  072D  1903               	skipnz
  1355  072E  0AF3               	incf	___awmod@dividend+1,f
  1356  072F                     l786:	
  1357  072F  0873               	movf	___awmod@dividend+1,w
  1358  0730  00F1               	movwf	?___awmod+1
  1359  0731  0872               	movf	___awmod@dividend,w
  1360  0732  00F0               	movwf	?___awmod
  1361  0733  0008               	return
  1362  0734                     __end_of___awmod:	
  1363                           
  1364                           	psect	text8
  1365  0734                     __ptext8:	
  1366 ;; *************** function ___awdiv *****************
  1367 ;; Defined at:
  1368 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  divisor         2    7[COMMON] int 
  1371 ;;  dividend        2    9[COMMON] int 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  quotient        2    2[BANK0 ] int 
  1374 ;;  sign            1    1[BANK0 ] unsigned char 
  1375 ;;  counter         1    0[BANK0 ] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  2    7[COMMON] int 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1386 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1387 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1388 ;;      Totals:         5       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1389 ;;Total ram usage:        9 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function ___awdiv
  1400  0734                     ___awdiv:	
  1401                           
  1402                           ;incstack = 0
  1403                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1404  0734  0020               	movlb	0	; select bank0
  1405  0735  01A1               	clrf	___awdiv@sign
  1406  0736  1FF8               	btfss	___awdiv@divisor+1,7
  1407  0737  2F3F               	goto	l716
  1408  0738  09F7               	comf	___awdiv@divisor,f
  1409  0739  09F8               	comf	___awdiv@divisor+1,f
  1410  073A  0AF7               	incf	___awdiv@divisor,f
  1411  073B  1903               	skipnz
  1412  073C  0AF8               	incf	___awdiv@divisor+1,f
  1413  073D  01A1               	clrf	___awdiv@sign
  1414  073E  0AA1               	incf	___awdiv@sign,f
  1415  073F                     l716:	
  1416  073F  1FFA               	btfss	___awdiv@dividend+1,7
  1417  0740  2F4A               	goto	l722
  1418  0741  09F9               	comf	___awdiv@dividend,f
  1419  0742  09FA               	comf	___awdiv@dividend+1,f
  1420  0743  0AF9               	incf	___awdiv@dividend,f
  1421  0744  1903               	skipnz
  1422  0745  0AFA               	incf	___awdiv@dividend+1,f
  1423  0746  3001               	movlw	1
  1424  0747  00FB               	movwf	??___awdiv
  1425  0748  087B               	movf	??___awdiv,w
  1426  0749  06A1               	xorwf	___awdiv@sign,f
  1427  074A                     l722:	
  1428  074A  01A2               	clrf	___awdiv@quotient
  1429  074B  01A3               	clrf	___awdiv@quotient+1
  1430  074C  0877               	movf	___awdiv@divisor,w
  1431  074D  0478               	iorwf	___awdiv@divisor+1,w
  1432  074E  1903               	btfsc	3,2
  1433  074F  2F79               	goto	l744
  1434  0750  01A0               	clrf	___awdiv@counter
  1435  0751  0AA0               	incf	___awdiv@counter,f
  1436  0752                     l732:	
  1437  0752  1BF8               	btfsc	___awdiv@divisor+1,7
  1438  0753  2F5E               	goto	l734
  1439  0754  3001               	movlw	1
  1440  0755                     u325:	
  1441  0755  35F7               	lslf	___awdiv@divisor,f
  1442  0756  0DF8               	rlf	___awdiv@divisor+1,f
  1443  0757  0B89               	decfsz	9,f
  1444  0758  2F55               	goto	u325
  1445  0759  3001               	movlw	1
  1446  075A  00FB               	movwf	??___awdiv
  1447  075B  087B               	movf	??___awdiv,w
  1448  075C  07A0               	addwf	___awdiv@counter,f
  1449  075D  2F52               	goto	l732
  1450  075E                     l734:	
  1451  075E  3001               	movlw	1
  1452  075F                     u345:	
  1453  075F  35A2               	lslf	___awdiv@quotient,f
  1454  0760  0DA3               	rlf	___awdiv@quotient+1,f
  1455  0761  0B89               	decfsz	9,f
  1456  0762  2F5F               	goto	u345
  1457  0763  0878               	movf	___awdiv@divisor+1,w
  1458  0764  027A               	subwf	___awdiv@dividend+1,w
  1459  0765  1D03               	skipz
  1460  0766  2F69               	goto	u355
  1461  0767  0877               	movf	___awdiv@divisor,w
  1462  0768  0279               	subwf	___awdiv@dividend,w
  1463  0769                     u355:	
  1464  0769  1C03               	skipc
  1465  076A  2F70               	goto	l740
  1466  076B  0877               	movf	___awdiv@divisor,w
  1467  076C  02F9               	subwf	___awdiv@dividend,f
  1468  076D  0878               	movf	___awdiv@divisor+1,w
  1469  076E  3BFA               	subwfb	___awdiv@dividend+1,f
  1470  076F  1422               	bsf	___awdiv@quotient,0
  1471  0770                     l740:	
  1472  0770  3001               	movlw	1
  1473  0771                     u365:	
  1474  0771  36F8               	lsrf	___awdiv@divisor+1,f
  1475  0772  0CF7               	rrf	___awdiv@divisor,f
  1476  0773  0B89               	decfsz	9,f
  1477  0774  2F71               	goto	u365
  1478  0775  3001               	movlw	1
  1479  0776  02A0               	subwf	___awdiv@counter,f
  1480  0777  1D03               	btfss	3,2
  1481  0778  2F5E               	goto	l734
  1482  0779                     l744:	
  1483  0779  0821               	movf	___awdiv@sign,w
  1484  077A  1903               	btfsc	3,2
  1485  077B  2F81               	goto	l748
  1486  077C  09A2               	comf	___awdiv@quotient,f
  1487  077D  09A3               	comf	___awdiv@quotient+1,f
  1488  077E  0AA2               	incf	___awdiv@quotient,f
  1489  077F  1903               	skipnz
  1490  0780  0AA3               	incf	___awdiv@quotient+1,f
  1491  0781                     l748:	
  1492  0781  0823               	movf	___awdiv@quotient+1,w
  1493  0782  00F8               	movwf	?___awdiv+1
  1494  0783  0822               	movf	___awdiv@quotient,w
  1495  0784  00F7               	movwf	?___awdiv
  1496  0785  0008               	return
  1497  0786                     __end_of___awdiv:	
  1498  007E                     btemp	set	126	;btemp
  1499  007E                     wtemp	set	126
  1500  007E                     wtemp0	set	126
  1501  0080                     wtemp1	set	128
  1502  0082                     wtemp2	set	130
  1503  0084                     wtemp3	set	132
  1504  0086                     wtemp4	set	134
  1505  0088                     wtemp5	set	136
  1506  007F                     wtemp6	set	127
  1507  007E                     ttemp	set	126
  1508  007E                     ttemp0	set	126
  1509  0081                     ttemp1	set	129
  1510  0084                     ttemp2	set	132
  1511  0087                     ttemp3	set	135
  1512  007F                     ttemp4	set	127
  1513  007E                     ltemp	set	126
  1514  007E                     ltemp0	set	126
  1515  0082                     ltemp1	set	130
  1516  0086                     ltemp2	set	134
  1517  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      5       5
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___awdiv
    _init->_init_display
    _init_display->_print_instr
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1140
                                             12 COMMON     2     2      0
                                              4 BANK0      1     1      0
                            ___awdiv
                            ___awmod
                               _init
                         _print_char
                        _print_instr
 ---------------------------------------------------------------------------------
 (1) _print_char                                           2     2      0      44
                                              0 COMMON     2     2      0
                                  _E
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      44
                       _init_display
 ---------------------------------------------------------------------------------
 (2) _init_display                                         2     2      0      44
                                              2 COMMON     2     2      0
                                 _EE
                        _print_instr
 ---------------------------------------------------------------------------------
 (1) _print_instr                                          2     2      0      44
                                              0 COMMON     2     2      0
                                  _E
 ---------------------------------------------------------------------------------
 (2) _E                                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EE                                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     468
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     472
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   _init
     _init_display
       _EE
       _print_instr
         _E
   _print_char
     _E
   _print_instr
     _E

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       5       5        6.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri May 06 20:02:59 2016

                      _E 0655                       ?_E 0070                       _EE 0673  
           ___awdiv@sign 0021                      ??_E 0070                      ?_EE 0070  
                    l722 074A                      l740 0770                      l732 0752  
                    l716 073F                      l734 075E                      l744 0779  
                    l760 06F9                      l748 0781                      l772 0706  
                    l764 0700                      l774 0712                      l782 0727  
                    l786 072F                      l778 071E                      l794 078F  
                    u325 0755                      u345 075F                      u425 0709  
                    u355 0769                      u275 0695                      u365 0771  
                    u445 0718                      u285 06AF                      u455 071F  
                    u537 07E3                      u547 06C2                      u557 0675  
                    u567 067B                      u577 0681                      u587 0687  
           ___awmod@sign 0076                      wreg 0009                     ??_EE 0070  
                   _LATA 010C                     _LATB 010D                     _main 0786  
                   _init 0664                     btemp 007E                     ltemp 007E  
                   start 0002                     ttemp 007E                     wtemp 007E  
                  ?_main 0070                    ?_init 0070          __end_of___awdiv 0786  
        __end_of___awmod 0734          ___awdiv@divisor 0077          ___awdiv@counter 0020  
                  _PORTA 000C                    _PORTB 000D                    _TRISA 008C  
                  _TRISB 008D                    main@i 0024                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FD             __end_of_main 07FD  
           __end_of_init 0673         print_instr@instr 0071                   ??_main 007C  
                 ??_init 0074         ___awdiv@dividend 0079                   _ANSELA 018C  
                 _ANSELB 018D            ?_init_display 0070                ??___awdiv 007B  
              ??___awmod 0074         ___awdiv@quotient 0022          ___awmod@divisor 0070  
        ___awmod@counter 0075           print_char@data 0071           ??_init_display 0072  
           ?_print_instr 0070  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             __end_of_EE 068A               __pmaintext 0786               __size_of_E 000F  
                ___awdiv 0734                  ___awmod 06EF     __end_of_init_display 06EF  
                __ptext1 06A3                  __ptext2 0664                  __ptext3 06BE  
                __ptext4 068A                  __ptext5 0655                  __ptext6 0673  
                __ptext7 06EF                  __ptext8 0734         ___awmod@dividend 0072  
   end_of_initialization 07FD     __size_of_print_instr 0019                _PORTAbits 000C  
             _print_char 06A3      start_initialization 07FD    __size_of_init_display 0031  
            ?_print_char 0070                ___latbits 0002            __pcstackBANK0 0020  
              __end_of_E 0664             _init_display 06BE                 ?___awdiv 0077  
               ?___awmod 0070              __size_of_EE 0017      __size_of_print_char 001B  
          ??_print_instr 0070         __size_of___awdiv 0052         __size_of___awmod 0045  
          __size_of_main 0077            __size_of_init 000F      __end_of_print_instr 06A3  
           ??_print_char 0070       __end_of_print_char 06BE              _print_instr 068A  
